name: Build & scan demo client application

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  REGISTRY: ghcr.io # Using Github container repository
  REPOSITORY: ghcr.io/astridstar/demo-to-app/
  IMAGE_TAG: ghcr.io/astridstar/demo-to-app/client
  WORK_DIR: ./client

jobs:
  build:
    name: Build web application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.IMAGE_TAG }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          #context: ./server
          context: ${{ env.WORK_DIR }}
          push: true
          tags: ${{ env.IMAGE_TAG }}:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
          secrets: 'github_token=${{ secrets.GITHUB_TOKEN }}'

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  scan_high_critical:
    needs: build
    name: Trivy Scan - High and Critical Severity
    runs-on: ubuntu-latest

    steps:
      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.IMAGE_TAG }}:${{ github.sha }}'
          exit-code: '0' # exit code 1 when vulnerabilities were found and flag as failed
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'HIGH,CRITICAL'
          scan-type: 'image'
          #format: 'table'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results-high-critical.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results-high-critical.sarif'

  scan_medium_low:
    needs: scan_high_critical
    name: Trivy Scan - Medium, Low, Unknown Severity
    runs-on: ubuntu-latest

    steps:
      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.IMAGE_TAG }}:${{ github.sha }}'
          exit-code: '0' # exit code 1 when vulnerabilities were found and flag as failed
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'MEDIUM,LOW,UNKNOWN'
          scan-type: 'image'
          #format: 'table'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results-medium-low.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results-medium-low.sarif'
